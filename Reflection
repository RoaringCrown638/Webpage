Since machines cannot comprehend little details in tasks like humans can, we need to adapt our thinking in a way that allows us to instruct the computer to do exactly what we want it to do. The set of steps that allow us to do this, together make Computational Thinking. In this module I learned more about computational thinking, but also realized what I have been doing for a while now without thinking about it. Since I have programmed before, I had subconsiously been going through all the steps without realizing it. Not only did this module allow me to understand what I have been doing, it also taught me how to do it better. 

In the course, there were a number of points raised throughout the lectures. We learned issues regarding scalability using the example of serving tea to a large group of people. The steps involved in serving tea to one table are different from those needed to serve a room full of people. In this situation scalability becomes a factor. Since it is a wider group, We need to think about how we are going to serve them, what the most ideal way to prepare the tea is and how many more cups do we need. I also learned about how we can make our programs efficient by thinking about patterns. In the tea example, if we are making tea for a small group of people, we can assume we are using a medium sized utensil. However, for a large group of people, we need to increase the size of the utensil, rather than adding several more. This makes things quicker and easier. There were also other factors, such as the amount of ingredients we are adding in each scenario.

Working on the assignment of creating a website has also been a learning experience for me. Having, never had programmed a website before, this was my first attempt at it and I wanted it to be good. For that reason I spent a long time on trying to make it look like what I had in mind. It has been a rewarding experience, in that I have actively used computational thinking to tackle tough or unfamiliar situations. Although I am happy with what I have managed to create, I went through some trouble trying to program it. Sometimes, my code didn't work the way I thought it would, other times it did, but it broke everything else. However, I kept experimenting with different things to learn as much as I could by making as many mistakes as I could.

Although it is a very minute and trivial aspect, computational thinking is a vital part of programming. I have learned more about how to think like a programmer and develop some habits that would assist me in the rest of the course which will make things easier to understand and do. Since computational thinking applies to every day life in general, the things I have learned in this course will help me in my future as well.
